# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserModel {
  id: String!
  name: String!
  description: String!
  lastName: String!
  email: String!
  phone: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type UserQuery {
  findAll(options: UserFindAll): [UserModel!]!
  findOne(options: UserFindOne): UserModel
}

input UserFindAll {
  filters: [UserFilterInput!]
  orders: [UserOrderInput!]
  pagination: UserPaginationInput
}

input UserFilterInput {
  id: UserFilterInput_Id
  name: UserFilterInput_Id
  description: UserFilterInput_Id
  lastName: UserFilterInput_Id
  email: UserFilterInput_Id
  phone: UserFilterInput_Id
  createdAt: UserFilterInput_CreatedAt
  updatedAt: UserFilterInput_CreatedAt
  deletedAt: UserFilterInput_CreatedAt
  or: [UserFilterInput_Or!]
}

input UserFilterInput_Id {
  eq: String
  notEq: String
  contains: String
  notContains: String
  startsWith: String
  notStartsWith: String
  endsWith: String
  notEndsWith: String
  in: [String!]
  notIn: [String!]
  isNull: Boolean
  isNotNull: Boolean
}

input UserFilterInput_CreatedAt {
  eq: DateTime
  notEq: DateTime
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  between: UserFilterInput_CreatedAt_Between
  notBetween: UserFilterInput_CreatedAt_Between
  isNull: Boolean
  isNotNull: Boolean
}

input UserFilterInput_CreatedAt_Between {
  start: DateTime!
  end: DateTime!
}

input UserFilterInput_Or {
  id: UserFilterInput_Id
  name: UserFilterInput_Id
  description: UserFilterInput_Id
  lastName: UserFilterInput_Id
  email: UserFilterInput_Id
  phone: UserFilterInput_Id
  createdAt: UserFilterInput_CreatedAt
  updatedAt: UserFilterInput_CreatedAt
  deletedAt: UserFilterInput_CreatedAt
}

input UserOrderInput {
  column: UserOrderInput_ColumnEnum_0!

  """Order"""
  order: Order!
}

"""Enum values for UserOrderInput.column"""
enum UserOrderInput_ColumnEnum_0 {
  createdAt
  description
  id
  name
  lastName
}

"""
Enum values for SupplyCategoryPaginationInput_Cursor_StartFrom_DeletedAt.order
"""
enum Order {
  ASC
  DESC
}

input UserPaginationInput {
  limit: Float!
  offset: Float
  cursor: UserPaginationInput_Cursor
}

input UserPaginationInput_Cursor {
  id: String!
  startFrom: UserPaginationInput_Cursor_StartFrom!
}

input UserPaginationInput_Cursor_StartFrom {
  id: UserPaginationInput_Cursor_StartFrom_Id!
  name: UserPaginationInput_Cursor_StartFrom_Name!
  description: UserPaginationInput_Cursor_StartFrom_Description!
  lastName: UserPaginationInput_Cursor_StartFrom_LastName!
  email: UserPaginationInput_Cursor_StartFrom_Email!
  phone: UserPaginationInput_Cursor_StartFrom_Phone!
  createdAt: UserPaginationInput_Cursor_StartFrom_CreatedAt!
  updatedAt: UserPaginationInput_Cursor_StartFrom_UpdatedAt!
  deletedAt: UserPaginationInput_Cursor_StartFrom_DeletedAt!
}

input UserPaginationInput_Cursor_StartFrom_Id {
  value: String!
  order: Order!
}

input UserPaginationInput_Cursor_StartFrom_Name {
  value: String!
  order: Order!
}

input UserPaginationInput_Cursor_StartFrom_Description {
  value: String!
  order: Order!
}

input UserPaginationInput_Cursor_StartFrom_LastName {
  value: String!
  order: Order!
}

input UserPaginationInput_Cursor_StartFrom_Email {
  value: String!
  order: Order!
}

input UserPaginationInput_Cursor_StartFrom_Phone {
  value: String!
  order: Order!
}

input UserPaginationInput_Cursor_StartFrom_CreatedAt {
  value: DateTime!
  order: Order!
}

input UserPaginationInput_Cursor_StartFrom_UpdatedAt {
  value: DateTime!
  order: Order!
}

input UserPaginationInput_Cursor_StartFrom_DeletedAt {
  value: DateTime!
  order: Order!
}

input UserFindOne {
  filters: [UserFilterInput!]
}

type UserMutation {
  create(input: UserCreateInput!): UserModel!
  update(input: UserUpdateInput!): UserModel!
  delete(id: ID!): Boolean!
}

input UserCreateInput {
  name: String!
  description: String!
  lastName: String!
  email: String!
  phone: String!
}

input UserUpdateInput {
  name: String
  description: String
  lastName: String
  email: String
  phone: String
  id: String!
}

type CurrencyModel {
  id: String!
  name: String!
  description: String!
  code: Int!
  shortName: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

type CurrencyQuery {
  findAll(options: CurrencyFindAll): [CurrencyModel!]!
  findOne(options: CurrencyFindOne): CurrencyModel
}

input CurrencyFindAll {
  filters: [CurrencyFilterInput!]
  orders: [CurrencyOrderInput!]
  pagination: CurrencyPaginationInput
}

input CurrencyFilterInput {
  id: UserFilterInput_Id
  name: UserFilterInput_Id
  description: UserFilterInput_Id
  code: CurrencyFilterInput_Code
  shortName: UserFilterInput_Id
  createdAt: UserFilterInput_CreatedAt
  updatedAt: UserFilterInput_CreatedAt
  deletedAt: UserFilterInput_CreatedAt
  or: [CurrencyFilterInput_Or!]
}

input CurrencyFilterInput_Code {
  eq: Float
  notEq: Float
  lt: Float
  lte: Float
  gt: Float
  gte: Float
  in: [Float!]
  notIn: [Float!]
  between: CurrencyFilterInput_Code_Between
  notBetween: CurrencyFilterInput_Code_Between
  isNull: Boolean
  isNotNull: Boolean
}

input CurrencyFilterInput_Code_Between {
  start: Float!
  end: Float!
}

input CurrencyFilterInput_Or {
  id: UserFilterInput_Id
  name: UserFilterInput_Id
  description: UserFilterInput_Id
  code: CurrencyFilterInput_Code
  shortName: UserFilterInput_Id
  createdAt: UserFilterInput_CreatedAt
  updatedAt: UserFilterInput_CreatedAt
  deletedAt: UserFilterInput_CreatedAt
}

input CurrencyOrderInput {
  column: CurrencyOrderInput_ColumnEnum_0!

  """Order"""
  order: Order!
}

"""Enum values for CurrencyOrderInput.column"""
enum CurrencyOrderInput_ColumnEnum_0 {
  createdAt
  description
  id
  name
}

input CurrencyPaginationInput {
  limit: Float!
  offset: Float
  cursor: CurrencyPaginationInput_Cursor
}

input CurrencyPaginationInput_Cursor {
  id: String!
  startFrom: CurrencyPaginationInput_Cursor_StartFrom!
}

input CurrencyPaginationInput_Cursor_StartFrom {
  id: CurrencyPaginationInput_Cursor_StartFrom_Id!
  name: CurrencyPaginationInput_Cursor_StartFrom_Name!
  description: CurrencyPaginationInput_Cursor_StartFrom_Description!
  code: CurrencyPaginationInput_Cursor_StartFrom_Code!
  shortName: CurrencyPaginationInput_Cursor_StartFrom_ShortName!
  createdAt: CurrencyPaginationInput_Cursor_StartFrom_CreatedAt!
  updatedAt: CurrencyPaginationInput_Cursor_StartFrom_UpdatedAt!
  deletedAt: CurrencyPaginationInput_Cursor_StartFrom_DeletedAt!
}

input CurrencyPaginationInput_Cursor_StartFrom_Id {
  value: String!
  order: Order!
}

input CurrencyPaginationInput_Cursor_StartFrom_Name {
  value: String!
  order: Order!
}

input CurrencyPaginationInput_Cursor_StartFrom_Description {
  value: String!
  order: Order!
}

input CurrencyPaginationInput_Cursor_StartFrom_Code {
  value: Int!
  order: Order!
}

input CurrencyPaginationInput_Cursor_StartFrom_ShortName {
  value: String!
  order: Order!
}

input CurrencyPaginationInput_Cursor_StartFrom_CreatedAt {
  value: DateTime!
  order: Order!
}

input CurrencyPaginationInput_Cursor_StartFrom_UpdatedAt {
  value: DateTime!
  order: Order!
}

input CurrencyPaginationInput_Cursor_StartFrom_DeletedAt {
  value: DateTime!
  order: Order!
}

input CurrencyFindOne {
  filters: [CurrencyFilterInput!]
}

type CurrencyMutation {
  create(input: CurrencyCreateInput!): CurrencyModel!
  update(input: CurrencyUpdateInput!): CurrencyModel!
  delete(id: ID!): Boolean!
}

input CurrencyCreateInput {
  name: String!
  description: String!
  code: Int!
  shortName: String!
}

input CurrencyUpdateInput {
  name: String
  description: String
  code: Int
  shortName: String
  id: String!
}

type TeamModel {
  id: String!
  name: String!
  description: String!
  referralId: String!
  currencyId: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

type TeamQuery {
  findAll(options: TeamFindAll): [TeamModel!]!
  findOne(options: TeamFindOne): TeamModel
}

input TeamFindAll {
  filters: [TeamFilterInput!]
  orders: [TeamOrderInput!]
  pagination: TeamPaginationInput
}

input TeamFilterInput {
  id: UserFilterInput_Id
  name: UserFilterInput_Id
  description: UserFilterInput_Id
  referralId: UserFilterInput_Id
  currencyId: UserFilterInput_Id
  createdAt: UserFilterInput_CreatedAt
  updatedAt: UserFilterInput_CreatedAt
  deletedAt: UserFilterInput_CreatedAt
  or: [TeamFilterInput_Or!]
}

input TeamFilterInput_Or {
  id: UserFilterInput_Id
  name: UserFilterInput_Id
  description: UserFilterInput_Id
  referralId: UserFilterInput_Id
  currencyId: UserFilterInput_Id
  createdAt: UserFilterInput_CreatedAt
  updatedAt: UserFilterInput_CreatedAt
  deletedAt: UserFilterInput_CreatedAt
}

input TeamOrderInput {
  column: TeamOrderInput_ColumnEnum_0!

  """Order"""
  order: Order!
}

"""Enum values for TeamOrderInput.column"""
enum TeamOrderInput_ColumnEnum_0 {
  createdAt
  description
  id
  name
}

input TeamPaginationInput {
  limit: Float!
  offset: Float
  cursor: TeamPaginationInput_Cursor
}

input TeamPaginationInput_Cursor {
  id: String!
  startFrom: TeamPaginationInput_Cursor_StartFrom!
}

input TeamPaginationInput_Cursor_StartFrom {
  id: TeamPaginationInput_Cursor_StartFrom_Id!
  name: TeamPaginationInput_Cursor_StartFrom_Name!
  description: TeamPaginationInput_Cursor_StartFrom_Description!
  referralId: TeamPaginationInput_Cursor_StartFrom_ReferralId!
  currencyId: TeamPaginationInput_Cursor_StartFrom_CurrencyId!
  createdAt: TeamPaginationInput_Cursor_StartFrom_CreatedAt!
  updatedAt: TeamPaginationInput_Cursor_StartFrom_UpdatedAt!
  deletedAt: TeamPaginationInput_Cursor_StartFrom_DeletedAt!
}

input TeamPaginationInput_Cursor_StartFrom_Id {
  value: String!
  order: Order!
}

input TeamPaginationInput_Cursor_StartFrom_Name {
  value: String!
  order: Order!
}

input TeamPaginationInput_Cursor_StartFrom_Description {
  value: String!
  order: Order!
}

input TeamPaginationInput_Cursor_StartFrom_ReferralId {
  value: String!
  order: Order!
}

input TeamPaginationInput_Cursor_StartFrom_CurrencyId {
  value: String!
  order: Order!
}

input TeamPaginationInput_Cursor_StartFrom_CreatedAt {
  value: DateTime!
  order: Order!
}

input TeamPaginationInput_Cursor_StartFrom_UpdatedAt {
  value: DateTime!
  order: Order!
}

input TeamPaginationInput_Cursor_StartFrom_DeletedAt {
  value: DateTime!
  order: Order!
}

input TeamFindOne {
  filters: [TeamFilterInput!]
}

type TeamMutation {
  create(input: TeamCreateInput!): TeamModel!
  update(input: TeamUpdateInput!): TeamModel!
  delete(id: ID!): Boolean!
}

input TeamCreateInput {
  name: String!
  description: String!
  referralId: String!
  currencyId: String!
}

input TeamUpdateInput {
  name: String
  description: String
  referralId: String
  currencyId: String
  id: String!
}

type TeamMateModel {
  id: String!
  name: String!
  description: String!
  referralId: String!
  currencyId: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

type TeamMateQuery {
  findAll(options: TeamMateFindAll): [TeamMateModel!]!
  findOne(options: TeamMateFindOne): TeamMateModel
}

input TeamMateFindAll {
  filters: [TeamMateFilterInput!]
  orders: [TeamMateOrderInput!]
  pagination: TeamMatePaginationInput
}

input TeamMateFilterInput {
  id: UserFilterInput_Id
  name: UserFilterInput_Id
  description: UserFilterInput_Id
  referralId: UserFilterInput_Id
  currencyId: UserFilterInput_Id
  createdAt: UserFilterInput_CreatedAt
  updatedAt: UserFilterInput_CreatedAt
  deletedAt: UserFilterInput_CreatedAt
  or: [TeamMateFilterInput_Or!]
}

input TeamMateFilterInput_Or {
  id: UserFilterInput_Id
  name: UserFilterInput_Id
  description: UserFilterInput_Id
  referralId: UserFilterInput_Id
  currencyId: UserFilterInput_Id
  createdAt: UserFilterInput_CreatedAt
  updatedAt: UserFilterInput_CreatedAt
  deletedAt: UserFilterInput_CreatedAt
}

input TeamMateOrderInput {
  column: TeamMateOrderInput_ColumnEnum_0!

  """Order"""
  order: Order!
}

"""Enum values for TeamMateOrderInput.column"""
enum TeamMateOrderInput_ColumnEnum_0 {
  createdAt
  description
  id
  name
}

input TeamMatePaginationInput {
  limit: Float!
  offset: Float
  cursor: TeamMatePaginationInput_Cursor
}

input TeamMatePaginationInput_Cursor {
  id: String!
  startFrom: TeamMatePaginationInput_Cursor_StartFrom!
}

input TeamMatePaginationInput_Cursor_StartFrom {
  id: TeamMatePaginationInput_Cursor_StartFrom_Id!
  name: TeamMatePaginationInput_Cursor_StartFrom_Name!
  description: TeamMatePaginationInput_Cursor_StartFrom_Description!
  referralId: TeamMatePaginationInput_Cursor_StartFrom_ReferralId!
  currencyId: TeamMatePaginationInput_Cursor_StartFrom_CurrencyId!
  createdAt: TeamMatePaginationInput_Cursor_StartFrom_CreatedAt!
  updatedAt: TeamMatePaginationInput_Cursor_StartFrom_UpdatedAt!
  deletedAt: TeamMatePaginationInput_Cursor_StartFrom_DeletedAt!
}

input TeamMatePaginationInput_Cursor_StartFrom_Id {
  value: String!
  order: Order!
}

input TeamMatePaginationInput_Cursor_StartFrom_Name {
  value: String!
  order: Order!
}

input TeamMatePaginationInput_Cursor_StartFrom_Description {
  value: String!
  order: Order!
}

input TeamMatePaginationInput_Cursor_StartFrom_ReferralId {
  value: String!
  order: Order!
}

input TeamMatePaginationInput_Cursor_StartFrom_CurrencyId {
  value: String!
  order: Order!
}

input TeamMatePaginationInput_Cursor_StartFrom_CreatedAt {
  value: DateTime!
  order: Order!
}

input TeamMatePaginationInput_Cursor_StartFrom_UpdatedAt {
  value: DateTime!
  order: Order!
}

input TeamMatePaginationInput_Cursor_StartFrom_DeletedAt {
  value: DateTime!
  order: Order!
}

input TeamMateFindOne {
  filters: [TeamMateFilterInput!]
}

type TeamMateMutation {
  create(input: TeamMateCreateInput!): TeamMateModel!
  update(input: TeamMateUpdateInput!): TeamMateModel!
  delete(id: ID!): Boolean!
}

input TeamMateCreateInput {
  name: String!
  description: String!
  referralId: String!
  currencyId: String!
}

input TeamMateUpdateInput {
  name: String
  description: String
  referralId: String
  currencyId: String
  id: String!
}

type ChannelModel {
  id: String!
  name: String!
  description: String!
  teamId: String!
  token: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

type ChannelQuery {
  findAll(options: ChannelFindAll): [ChannelModel!]!
  findOne(options: ChannelFindOne): ChannelModel
}

input ChannelFindAll {
  filters: [ChannelFilterInput!]
  orders: [ChannelOrderInput!]
  pagination: ChannelPaginationInput
}

input ChannelFilterInput {
  id: UserFilterInput_Id
  name: UserFilterInput_Id
  description: UserFilterInput_Id
  teamId: UserFilterInput_Id
  token: UserFilterInput_Id
  createdAt: UserFilterInput_CreatedAt
  updatedAt: UserFilterInput_CreatedAt
  deletedAt: UserFilterInput_CreatedAt
  or: [ChannelFilterInput_Or!]
}

input ChannelFilterInput_Or {
  id: UserFilterInput_Id
  name: UserFilterInput_Id
  description: UserFilterInput_Id
  teamId: UserFilterInput_Id
  token: UserFilterInput_Id
  createdAt: UserFilterInput_CreatedAt
  updatedAt: UserFilterInput_CreatedAt
  deletedAt: UserFilterInput_CreatedAt
}

input ChannelOrderInput {
  column: ChannelOrderInput_ColumnEnum_0!

  """Order"""
  order: Order!
}

"""Enum values for ChannelOrderInput.column"""
enum ChannelOrderInput_ColumnEnum_0 {
  createdAt
  description
  id
  name
}

input ChannelPaginationInput {
  limit: Float!
  offset: Float
  cursor: ChannelPaginationInput_Cursor
}

input ChannelPaginationInput_Cursor {
  id: String!
  startFrom: ChannelPaginationInput_Cursor_StartFrom!
}

input ChannelPaginationInput_Cursor_StartFrom {
  id: ChannelPaginationInput_Cursor_StartFrom_Id!
  name: ChannelPaginationInput_Cursor_StartFrom_Name!
  description: ChannelPaginationInput_Cursor_StartFrom_Description!
  teamId: ChannelPaginationInput_Cursor_StartFrom_TeamId!
  token: ChannelPaginationInput_Cursor_StartFrom_Token!
  createdAt: ChannelPaginationInput_Cursor_StartFrom_CreatedAt!
  updatedAt: ChannelPaginationInput_Cursor_StartFrom_UpdatedAt!
  deletedAt: ChannelPaginationInput_Cursor_StartFrom_DeletedAt!
}

input ChannelPaginationInput_Cursor_StartFrom_Id {
  value: String!
  order: Order!
}

input ChannelPaginationInput_Cursor_StartFrom_Name {
  value: String!
  order: Order!
}

input ChannelPaginationInput_Cursor_StartFrom_Description {
  value: String!
  order: Order!
}

input ChannelPaginationInput_Cursor_StartFrom_TeamId {
  value: String!
  order: Order!
}

input ChannelPaginationInput_Cursor_StartFrom_Token {
  value: String!
  order: Order!
}

input ChannelPaginationInput_Cursor_StartFrom_CreatedAt {
  value: DateTime!
  order: Order!
}

input ChannelPaginationInput_Cursor_StartFrom_UpdatedAt {
  value: DateTime!
  order: Order!
}

input ChannelPaginationInput_Cursor_StartFrom_DeletedAt {
  value: DateTime!
  order: Order!
}

input ChannelFindOne {
  filters: [ChannelFilterInput!]
}

type ChannelMutation {
  create(input: ChannelCreateInput!): ChannelModel!
  update(input: ChannelUpdateInput!): ChannelModel!
  delete(id: ID!): Boolean!
}

input ChannelCreateInput {
  name: String!
  description: String!
  teamId: String!
  token: String!
}

input ChannelUpdateInput {
  name: String
  description: String
  teamId: String
  token: String
  id: String!
}

type MemberModel {
  id: String!
  name: String!
  description: String!
  token: String!
  range: Float!
  channelId: String!
  userId: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

type MemberQuery {
  findAll(options: MemberFindAll): [MemberModel!]!
  findOne(options: MemberFindOne): MemberModel
}

input MemberFindAll {
  filters: [MemberFilterInput!]
  orders: [MemberOrderInput!]
  pagination: MemberPaginationInput
}

input MemberFilterInput {
  id: UserFilterInput_Id
  name: UserFilterInput_Id
  description: UserFilterInput_Id
  token: UserFilterInput_Id
  range: CurrencyFilterInput_Code
  channelId: UserFilterInput_Id
  userId: UserFilterInput_Id
  createdAt: UserFilterInput_CreatedAt
  updatedAt: UserFilterInput_CreatedAt
  deletedAt: UserFilterInput_CreatedAt
  or: [MemberFilterInput_Or!]
}

input MemberFilterInput_Or {
  id: UserFilterInput_Id
  name: UserFilterInput_Id
  description: UserFilterInput_Id
  token: UserFilterInput_Id
  range: CurrencyFilterInput_Code
  channelId: UserFilterInput_Id
  userId: UserFilterInput_Id
  createdAt: UserFilterInput_CreatedAt
  updatedAt: UserFilterInput_CreatedAt
  deletedAt: UserFilterInput_CreatedAt
}

input MemberOrderInput {
  column: MemberOrderInput_ColumnEnum_0!

  """Order"""
  order: Order!
}

"""Enum values for MemberOrderInput.column"""
enum MemberOrderInput_ColumnEnum_0 {
  createdAt
  description
  id
  name
}

input MemberPaginationInput {
  limit: Float!
  offset: Float
  cursor: MemberPaginationInput_Cursor
}

input MemberPaginationInput_Cursor {
  id: String!
  startFrom: MemberPaginationInput_Cursor_StartFrom!
}

input MemberPaginationInput_Cursor_StartFrom {
  id: MemberPaginationInput_Cursor_StartFrom_Id!
  name: MemberPaginationInput_Cursor_StartFrom_Name!
  description: MemberPaginationInput_Cursor_StartFrom_Description!
  token: MemberPaginationInput_Cursor_StartFrom_Token!
  range: MemberPaginationInput_Cursor_StartFrom_Range!
  channelId: MemberPaginationInput_Cursor_StartFrom_ChannelId!
  userId: MemberPaginationInput_Cursor_StartFrom_UserId!
  createdAt: MemberPaginationInput_Cursor_StartFrom_CreatedAt!
  updatedAt: MemberPaginationInput_Cursor_StartFrom_UpdatedAt!
  deletedAt: MemberPaginationInput_Cursor_StartFrom_DeletedAt!
}

input MemberPaginationInput_Cursor_StartFrom_Id {
  value: String!
  order: Order!
}

input MemberPaginationInput_Cursor_StartFrom_Name {
  value: String!
  order: Order!
}

input MemberPaginationInput_Cursor_StartFrom_Description {
  value: String!
  order: Order!
}

input MemberPaginationInput_Cursor_StartFrom_Token {
  value: String!
  order: Order!
}

input MemberPaginationInput_Cursor_StartFrom_Range {
  value: Float!
  order: Order!
}

input MemberPaginationInput_Cursor_StartFrom_ChannelId {
  value: String!
  order: Order!
}

input MemberPaginationInput_Cursor_StartFrom_UserId {
  value: String!
  order: Order!
}

input MemberPaginationInput_Cursor_StartFrom_CreatedAt {
  value: DateTime!
  order: Order!
}

input MemberPaginationInput_Cursor_StartFrom_UpdatedAt {
  value: DateTime!
  order: Order!
}

input MemberPaginationInput_Cursor_StartFrom_DeletedAt {
  value: DateTime!
  order: Order!
}

input MemberFindOne {
  filters: [MemberFilterInput!]
}

type MemberMutation {
  create(input: MemberCreateInput!): MemberModel!
  update(input: MemberUpdateInput!): MemberModel!
  delete(id: ID!): Boolean!
}

input MemberCreateInput {
  name: String!
  description: String!
  token: String!
  range: Float!
  channelId: String!
  userId: String!
}

input MemberUpdateInput {
  name: String
  description: String
  token: String
  range: Float
  channelId: String
  userId: String
  id: String!
}

type MessageModel {
  id: String!
  name: String!
  description: String!
  referralId: String!
  currencyId: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

type MessageQuery {
  findAll(options: MessageFindAll): [MessageModel!]!
  findOne(options: MessageFindOne): MessageModel
}

input MessageFindAll {
  filters: [MessageFilterInput!]
  orders: [MessageOrderInput!]
  pagination: MessagePaginationInput
}

input MessageFilterInput {
  id: UserFilterInput_Id
  name: UserFilterInput_Id
  description: UserFilterInput_Id
  referralId: UserFilterInput_Id
  currencyId: UserFilterInput_Id
  createdAt: UserFilterInput_CreatedAt
  updatedAt: UserFilterInput_CreatedAt
  deletedAt: UserFilterInput_CreatedAt
  or: [MessageFilterInput_Or!]
}

input MessageFilterInput_Or {
  id: UserFilterInput_Id
  name: UserFilterInput_Id
  description: UserFilterInput_Id
  referralId: UserFilterInput_Id
  currencyId: UserFilterInput_Id
  createdAt: UserFilterInput_CreatedAt
  updatedAt: UserFilterInput_CreatedAt
  deletedAt: UserFilterInput_CreatedAt
}

input MessageOrderInput {
  column: MessageOrderInput_ColumnEnum_0!

  """Order"""
  order: Order!
}

"""Enum values for MessageOrderInput.column"""
enum MessageOrderInput_ColumnEnum_0 {
  createdAt
  description
  id
  name
}

input MessagePaginationInput {
  limit: Float!
  offset: Float
  cursor: MessagePaginationInput_Cursor
}

input MessagePaginationInput_Cursor {
  id: String!
  startFrom: MessagePaginationInput_Cursor_StartFrom!
}

input MessagePaginationInput_Cursor_StartFrom {
  id: MessagePaginationInput_Cursor_StartFrom_Id!
  name: MessagePaginationInput_Cursor_StartFrom_Name!
  description: MessagePaginationInput_Cursor_StartFrom_Description!
  referralId: MessagePaginationInput_Cursor_StartFrom_ReferralId!
  currencyId: MessagePaginationInput_Cursor_StartFrom_CurrencyId!
  createdAt: MessagePaginationInput_Cursor_StartFrom_CreatedAt!
  updatedAt: MessagePaginationInput_Cursor_StartFrom_UpdatedAt!
  deletedAt: MessagePaginationInput_Cursor_StartFrom_DeletedAt!
}

input MessagePaginationInput_Cursor_StartFrom_Id {
  value: String!
  order: Order!
}

input MessagePaginationInput_Cursor_StartFrom_Name {
  value: String!
  order: Order!
}

input MessagePaginationInput_Cursor_StartFrom_Description {
  value: String!
  order: Order!
}

input MessagePaginationInput_Cursor_StartFrom_ReferralId {
  value: String!
  order: Order!
}

input MessagePaginationInput_Cursor_StartFrom_CurrencyId {
  value: String!
  order: Order!
}

input MessagePaginationInput_Cursor_StartFrom_CreatedAt {
  value: DateTime!
  order: Order!
}

input MessagePaginationInput_Cursor_StartFrom_UpdatedAt {
  value: DateTime!
  order: Order!
}

input MessagePaginationInput_Cursor_StartFrom_DeletedAt {
  value: DateTime!
  order: Order!
}

input MessageFindOne {
  filters: [MessageFilterInput!]
}

type MessageMutation {
  create(input: MessageCreateInput!): MessageModel!
  update(input: MessageUpdateInput!): MessageModel!
  delete(id: ID!): Boolean!
}

input MessageCreateInput {
  name: String!
  description: String!
  referralId: String!
  currencyId: String!
}

input MessageUpdateInput {
  name: String
  description: String
  referralId: String
  currencyId: String
  id: String!
}

type MemberNoticeModel {
  id: String!
  range: Float!
  channelId: String!
  mateId: String!
  memberId: String!
  notice: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

type MemberNoticeQuery {
  findAll(options: MemberNoticeFindAll): [MemberNoticeModel!]!
  findOne(options: MemberNoticeFindOne): MemberNoticeModel
}

input MemberNoticeFindAll {
  filters: [MemberNoticeFilterInput!]
  orders: [MemberNoticeOrderInput!]
  pagination: MemberNoticePaginationInput
}

input MemberNoticeFilterInput {
  id: UserFilterInput_Id
  range: CurrencyFilterInput_Code
  channelId: UserFilterInput_Id
  mateId: UserFilterInput_Id
  memberId: UserFilterInput_Id
  notice: UserFilterInput_Id
  createdAt: UserFilterInput_CreatedAt
  updatedAt: UserFilterInput_CreatedAt
  deletedAt: UserFilterInput_CreatedAt
  or: [MemberNoticeFilterInput_Or!]
}

input MemberNoticeFilterInput_Or {
  id: UserFilterInput_Id
  range: CurrencyFilterInput_Code
  channelId: UserFilterInput_Id
  mateId: UserFilterInput_Id
  memberId: UserFilterInput_Id
  notice: UserFilterInput_Id
  createdAt: UserFilterInput_CreatedAt
  updatedAt: UserFilterInput_CreatedAt
  deletedAt: UserFilterInput_CreatedAt
}

input MemberNoticeOrderInput {
  column: MemberNoticeOrderInput_ColumnEnum_0!

  """Order"""
  order: Order!
}

"""Enum values for MemberNoticeOrderInput.column"""
enum MemberNoticeOrderInput_ColumnEnum_0 {
  createdAt
  memberId
  channelId
  mateId
}

input MemberNoticePaginationInput {
  limit: Float!
  offset: Float
  cursor: MemberNoticePaginationInput_Cursor
}

input MemberNoticePaginationInput_Cursor {
  id: String!
  startFrom: MemberNoticePaginationInput_Cursor_StartFrom!
}

input MemberNoticePaginationInput_Cursor_StartFrom {
  id: MemberNoticePaginationInput_Cursor_StartFrom_Id!
  range: MemberNoticePaginationInput_Cursor_StartFrom_Range!
  channelId: MemberNoticePaginationInput_Cursor_StartFrom_ChannelId!
  mateId: MemberNoticePaginationInput_Cursor_StartFrom_MateId!
  memberId: MemberNoticePaginationInput_Cursor_StartFrom_MemberId!
  notice: MemberNoticePaginationInput_Cursor_StartFrom_Notice!
  createdAt: MemberNoticePaginationInput_Cursor_StartFrom_CreatedAt!
  updatedAt: MemberNoticePaginationInput_Cursor_StartFrom_UpdatedAt!
  deletedAt: MemberNoticePaginationInput_Cursor_StartFrom_DeletedAt!
}

input MemberNoticePaginationInput_Cursor_StartFrom_Id {
  value: String!
  order: Order!
}

input MemberNoticePaginationInput_Cursor_StartFrom_Range {
  value: Float!
  order: Order!
}

input MemberNoticePaginationInput_Cursor_StartFrom_ChannelId {
  value: String!
  order: Order!
}

input MemberNoticePaginationInput_Cursor_StartFrom_MateId {
  value: String!
  order: Order!
}

input MemberNoticePaginationInput_Cursor_StartFrom_MemberId {
  value: String!
  order: Order!
}

input MemberNoticePaginationInput_Cursor_StartFrom_Notice {
  value: String!
  order: Order!
}

input MemberNoticePaginationInput_Cursor_StartFrom_CreatedAt {
  value: DateTime!
  order: Order!
}

input MemberNoticePaginationInput_Cursor_StartFrom_UpdatedAt {
  value: DateTime!
  order: Order!
}

input MemberNoticePaginationInput_Cursor_StartFrom_DeletedAt {
  value: DateTime!
  order: Order!
}

input MemberNoticeFindOne {
  filters: [MemberNoticeFilterInput!]
}

type MemberNoticeMutation {
  create(input: MemberNoticeCreateInput!): MemberNoticeModel!
  update(input: MemberNoticeUpdateInput!): MemberNoticeModel!
  delete(id: ID!): Boolean!
}

input MemberNoticeCreateInput {
  range: Float!
  channelId: String!
  mateId: String!
  memberId: String!
  notice: String!
}

input MemberNoticeUpdateInput {
  range: Float
  channelId: String
  mateId: String
  memberId: String
  notice: String
  id: String!
}

type SupplyCategoryModel {
  id: String!
  name: String!
  teamId: String!
  timeAfterService: Int!
  nextVisit: Int!
  timeRange: Int!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime!
}

type SupplyCategoryQuery {
  findAll(options: SupplyCategoryFindAll): [SupplyCategoryModel!]!
  findOne(options: SupplyCategoryFindOne): SupplyCategoryModel
}

input SupplyCategoryFindAll {
  filters: [SupplyCategoryFilterInput!]
  orders: [SupplyCategoryOrderInput!]
  pagination: SupplyCategoryPaginationInput
}

input SupplyCategoryFilterInput {
  id: UserFilterInput_Id
  name: UserFilterInput_Id
  teamId: UserFilterInput_Id
  timeAfterService: CurrencyFilterInput_Code
  nextVisit: CurrencyFilterInput_Code
  timeRange: CurrencyFilterInput_Code
  createdAt: UserFilterInput_CreatedAt
  updatedAt: UserFilterInput_CreatedAt
  deletedAt: UserFilterInput_CreatedAt
  or: [SupplyCategoryFilterInput_Or!]
}

input SupplyCategoryFilterInput_Or {
  id: UserFilterInput_Id
  name: UserFilterInput_Id
  teamId: UserFilterInput_Id
  timeAfterService: CurrencyFilterInput_Code
  nextVisit: CurrencyFilterInput_Code
  timeRange: CurrencyFilterInput_Code
  createdAt: UserFilterInput_CreatedAt
  updatedAt: UserFilterInput_CreatedAt
  deletedAt: UserFilterInput_CreatedAt
}

input SupplyCategoryOrderInput {
  column: SupplyCategoryOrderInput_ColumnEnum_0!

  """Order"""
  order: Order!
}

"""Enum values for SupplyCategoryOrderInput.column"""
enum SupplyCategoryOrderInput_ColumnEnum_0 {
  createdAt
  teamId
  name
}

input SupplyCategoryPaginationInput {
  limit: Float!
  offset: Float
  cursor: SupplyCategoryPaginationInput_Cursor
}

input SupplyCategoryPaginationInput_Cursor {
  id: String!
  startFrom: SupplyCategoryPaginationInput_Cursor_StartFrom!
}

input SupplyCategoryPaginationInput_Cursor_StartFrom {
  id: SupplyCategoryPaginationInput_Cursor_StartFrom_Id!
  name: SupplyCategoryPaginationInput_Cursor_StartFrom_Name!
  teamId: SupplyCategoryPaginationInput_Cursor_StartFrom_TeamId!
  timeAfterService: SupplyCategoryPaginationInput_Cursor_StartFrom_TimeAfterService!
  nextVisit: SupplyCategoryPaginationInput_Cursor_StartFrom_NextVisit!
  timeRange: SupplyCategoryPaginationInput_Cursor_StartFrom_TimeRange!
  createdAt: SupplyCategoryPaginationInput_Cursor_StartFrom_CreatedAt!
  updatedAt: SupplyCategoryPaginationInput_Cursor_StartFrom_UpdatedAt!
  deletedAt: SupplyCategoryPaginationInput_Cursor_StartFrom_DeletedAt!
}

input SupplyCategoryPaginationInput_Cursor_StartFrom_Id {
  value: String!
  order: Order!
}

input SupplyCategoryPaginationInput_Cursor_StartFrom_Name {
  value: String!
  order: Order!
}

input SupplyCategoryPaginationInput_Cursor_StartFrom_TeamId {
  value: String!
  order: Order!
}

input SupplyCategoryPaginationInput_Cursor_StartFrom_TimeAfterService {
  value: Int!
  order: Order!
}

input SupplyCategoryPaginationInput_Cursor_StartFrom_NextVisit {
  value: Int!
  order: Order!
}

input SupplyCategoryPaginationInput_Cursor_StartFrom_TimeRange {
  value: Int!
  order: Order!
}

input SupplyCategoryPaginationInput_Cursor_StartFrom_CreatedAt {
  value: DateTime!
  order: Order!
}

input SupplyCategoryPaginationInput_Cursor_StartFrom_UpdatedAt {
  value: DateTime!
  order: Order!
}

input SupplyCategoryPaginationInput_Cursor_StartFrom_DeletedAt {
  value: DateTime!
  order: Order!
}

input SupplyCategoryFindOne {
  filters: [SupplyCategoryFilterInput!]
}

type SupplyCategoryMutation {
  create(input: SupplyCategoryCreateInput!): SupplyCategoryModel!
  update(input: SupplyCategoryUpdateInput!): SupplyCategoryModel!
  delete(id: ID!): Boolean!
}

input SupplyCategoryCreateInput {
  name: String!
  teamId: String!
  timeAfterService: Int!
  nextVisit: Int!
  timeRange: Int!
}

input SupplyCategoryUpdateInput {
  name: String
  teamId: String
  timeAfterService: Int
  nextVisit: Int
  timeRange: Int
  id: String!
}

type Query {
  user: UserQuery!
  currency: CurrencyQuery!
  team: TeamQuery!
  teamMate: TeamMateQuery!
  channel: ChannelQuery!
  member: MemberQuery!
  message: MessageQuery!
  memberNotice: MemberNoticeQuery!
  supplyCategory: SupplyCategoryQuery!
}

type Mutation {
  user: UserMutation!
  currency: CurrencyMutation!
  team: TeamMutation!
  teamMate: TeamMateMutation!
  channel: ChannelMutation!
  member: MemberMutation!
  message: MessageMutation!
  memberNotice: MemberNoticeMutation!
  supplyCategory: SupplyCategoryMutation!
}